#+HUGO_SECTION: zettels
#+SETUPFILE:./hugo_setup.org
#+TITLE: re-frame
#+DATE: 2020-06-05

#+BEGIN_SRC sh
lein new re-frame my-web
#+END_SRC

to run:
#+BEGIN_SRC sh
lein dev
#+END_SRC

* Six Dominoes
Each iteration of the re-frame loop has 6 stages, and because these stages
happen one after the other, we talk about this process as a six domino cascade.

One domino triggers the next, which triggers the next, boom, boom, boom, until
we are back at the beginning of the loop, and the dominoes reset to attention
again, ready for the next iteration of the same cascade.

The six dominoes are:

- Event dispatch
- Event handling
- Effect handling
- Query
- View
- DOM

* directory
config.cljs
core.cljs
db.cljs
events.cljs
subs.cljs
views.cljs

#+BEGIN_SRC clojure
(defn dev-setup []
  (when config/debug?
    (println "dev mode")))

(defn ^:dev/after-load mount-root []
  (re-frame/clear-subscription-cache!)
  (let [root-el (.getElementById js/document "app")]
    (rdom/unmount-component-at-node root-el)
    (rdom/render [views/main-panel] root-el)))

(defn init []
  (re-frame/dispatch-sync [::events/initialize-db])
  (dev-setup)
  (mount-root))
#+END_SRC

* Registering Event Handlers
Event handler functions:

- take two arguments coeffects and event
- return effects

Event handlers can be registered in two ways:

- reg-event-fx
- reg-event-db

One ends in -fx and the other in -db.

reg-event-fx can take many coeffects and can return many effects
reg-event-db allows you to write simpler handlers for the common case where you want them to take only one coeffect - the current app state - and return one effect - the updated app state.


reg-event-db
We register event handlers using re-frame's API:


#+BEGIN_SRC clojure
(rf/reg-event-db           ;; <-- the re-frame API function to use
  :the-event-id            ;; <-- the event id
  the-event-handler-fn)    ;; <-- the handler function
#+END_SRC
The handler function you provide should expect two arguments:

db - the current application state (the map value contained in app-db)
e - the event vector (given to dispatch)
So, your handler function will have a signature like this: (fn [db e] ...).

These event handlers must compute and return the new state of the application, which means they return a modified version of db.
